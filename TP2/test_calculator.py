# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAdd():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_add(self):
    print("Testing addition...")
    self.setup_method(None)
    self.driver.get("https://safatelli.github.io/tp-test-logiciel/assets/calc.html")
    self.driver.set_window_size(699, 768)
    self.driver.find_element(By.ID, "num1").send_keys("1")
    self.driver.find_element(By.ID, "operator").click()
    dropdown = self.driver.find_element(By.ID, "operator")
    dropdown.find_element(By.XPATH, "//option[. = '+']").click()
    self.driver.find_element(By.ID, "num2").send_keys("2")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    assert self.driver.find_element(By.ID, "result").text == "R√©sultat : 3", print("test failed ‚ùå")
    print("test passed ‚úÖ")
    self.driver.close()

  def test_multi(self):
    print("üß™ test multiplication...")
    self.setup_method(None)
    self.driver.get("https://safatelli.github.io/tp-test-logiciel/assets/calc.html")
    self.driver.set_window_size(699, 768)
    self.driver.find_element(By.ID, "num1").send_keys("3")
    self.driver.find_element(By.ID, "operator").click()
    dropdown = self.driver.find_element(By.ID, "operator")
    dropdown.find_element(By.XPATH, "//option[. = '*']").click()
    self.driver.find_element(By.ID, "num2").send_keys("2")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    assert self.driver.find_element(By.ID, "result").text == "R√©sultat : 6", print("test failed ‚ùå")
    print("test passed ‚úÖ")
    print("--------------------------------")
    self.driver.close()

  def test_div(self):
    print("üß™ test division...")
    self.setup_method(None)
    self.driver.get("https://safatelli.github.io/tp-test-logiciel/assets/calc.html")
    self.driver.set_window_size(699, 768)
    self.driver.find_element(By.ID, "num1").send_keys("10")
    self.driver.find_element(By.ID, "operator").click()
    dropdown = self.driver.find_element(By.ID, "operator")
    dropdown.find_element(By.XPATH, "//option[. = '/']").click()
    self.driver.find_element(By.ID, "num2").send_keys("2")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    assert self.driver.find_element(By.ID, "result").text == "R√©sultat : 5", print("test failed ‚ùå")
    print("test passed ‚úÖ")
    print("--------------------------------")
    self.driver.close()

  def test_sub(self):
    print("üß™ test subtraction...")
    self.setup_method(None)
    self.driver.get("https://safatelli.github.io/tp-test-logiciel/assets/calc.html")
    self.driver.set_window_size(699, 768)
    self.driver.find_element(By.ID, "num1").send_keys("3")
    self.driver.find_element(By.ID, "operator").click()
    dropdown = self.driver.find_element(By.ID, "operator")
    dropdown.find_element(By.XPATH, "//option[. = '-']").click()
    self.driver.find_element(By.ID, "num2").send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    assert self.driver.find_element(By.ID, "result").text == "R√©sultat : 2", print("test failed ‚ùå")
    print("test passed ‚úÖ")
    print("--------------------------------")
    self.driver.close()

  def test_div_by_zero(self):
    print("üß™ test division by zero...")
    self.setup_method(None)
    self.driver.get("https://safatelli.github.io/tp-test-logiciel/assets/calc.html")
    self.driver.set_window_size(699, 768)
    self.driver.find_element(By.ID, "num1").send_keys("3")
    self.driver.find_element(By.ID, "operator").click()
    dropdown = self.driver.find_element(By.ID, "operator")
    dropdown.find_element(By.XPATH, "//option[. = '/']").click()
    self.driver.find_element(By.ID, "num2").send_keys("0")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    assert self.driver.find_element(By.ID, "result").text == "R√©sultat : Infinity", print("test failed ‚ùå")
    print("test passed ‚úÖ")
    print("--------------------------------")
    self.driver.close()
  
test = TestAdd()
test.test_add()
test.test_multi()
test.test_div()
test.test_sub()
